{"version":3,"sources":["components/Scores.jsx","util/easterEggNotifications.js","components/ToyCenter.jsx","components/Toy.jsx","components/ConfettiContext.jsx","util/cookies.js","components/GameContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["Scores","props","currLevel","highScore","className","easterEggFound","egg1","egg2","egg3","numEggsFound","giveHint","egg3Hint","egg2Hint","egg1Hint","toast","dark","toastId","notifyEasterEgg1","allEasterEggsFound","celeberate","success","onClose","autoClose","notifyEasterEgg2","soundHTMLEl","document","getElementById","src","height","width","ToyCenter","useState","centerAnimated","setCenterAnimated","cx","cy","r","onClick","notifyEasterEgg3","fill","Toy","forceStopAnimate","useRef","targetColorIdx","gameColors","current","useEffect","animateToy","sleep","ms","Promise","resolve","setTimeout","a","rootHtmlTag","getElementsByTagName","classList","add","style","cursor","animateGameColors","i","changeColor","length","remove","resetColor","color","handleColorClick","e","target","id","levelCompleted","incrementLevel","setGameOver","d","xlinkHref","overflow","clipPath","ConfettiContext","React","createContext","ConfettiContextProvider","children","runConfetti","setRunConfetti","Provider","value","run","getCookie","cname","name","ca","cookie","split","c","charAt","substring","indexOf","GameContainer","highScoreCookie","gameStarted","setGameStarted","gameOver","setCurrLevel","setHighScore","reachedHighScore","COLORS_ARR","confettiCtx","useContext","push","Math","floor","random","cvalue","exdays","Date","setTime","getTime","expires","toUTCString","setCookie","App","info","title","scrolling","frameborder","allow","position","transition","Slide","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.91f87e39.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Scores = (props) => {\n  let currLevel = props.currLevel;\n  let highScore = props.highScore;\n\n  return (\n    <div className=\"Scores\">\n      <div>\n        <b>Level:</b>\n        <div>{currLevel}</div>\n      </div>\n      <div>\n        <b>High Score:</b>\n        <div>{highScore}</div>\n      </div>\n    </div>\n  );\n};\n","import {toast} from 'react-toastify';\n\n// variables\nlet easterEggFound = {\n  egg1: false,\n  egg2: false,\n  egg3: false,\n};\nlet numEggsFound = 0;\n\n// constants\nconst TOTAL_EGGS_COUNT = 3;\n\n// hint notifications\nconst giveHint = () => {\n  if (!easterEggFound.egg1) {\n    egg1Hint();\n  } else if (!easterEggFound.egg2) {\n    egg2Hint();\n  } else if (!easterEggFound.egg3) {\n    egg3Hint();\n  }\n};\nconst egg1Hint = () =>\n  toast.dark('Ask Simon for #1, maybe he knows 😏', {toastId: 'egg-1-toast'});\nconst egg2Hint = () =>\n  toast.dark(\"Let's see if you can find 🥚 #2 MUHAHAHA\", {\n    toastId: 'egg-2-toast',\n  });\nconst egg3Hint = () =>\n  toast.dark(\"You're really on TARGET, but I wonder if you can find egg #3\", {\n    toastId: 'egg-3-toast',\n  });\n\n// egg found notifications\nexport const notifyEasterEgg1 = () => {\n  if (!easterEggFound.egg1) {\n    easterEggFound.egg1 = true;\n    numEggsFound++;\n\n    if (allEasterEggsFound()) {\n      celeberate();\n      return;\n    }\n\n    toast.success(`${numEggsFound}/3 eggs found!`, {\n      onClose: () => giveHint(),\n      autoClose: 3000,\n    });\n  }\n};\n\nexport const notifyEasterEgg2 = () => {\n  if (!easterEggFound.egg2) {\n    easterEggFound.egg2 = true;\n    numEggsFound++;\n\n    if (allEasterEggsFound()) {\n      celeberate();\n      return;\n    }\n\n    toast.success(`${numEggsFound}/3 eggs found!`, {\n      onClose: () => giveHint(),\n      autoClose: 3000,\n    });\n  }\n};\n\nexport const notifyEasterEgg3 = () => {\n  if (!easterEggFound.egg3) {\n    easterEggFound.egg3 = true;\n    numEggsFound++;\n\n    if (allEasterEggsFound()) {\n      celeberate();\n      return;\n    }\n\n    toast.success(`${numEggsFound}/3 eggs found!`, {\n      onClose: () => giveHint(),\n      autoClose: 3000,\n    });\n  }\n};\n\nexport const allEasterEggsFound = () => {\n  return numEggsFound === TOTAL_EGGS_COUNT;\n};\n\nconst celeberate = () => {\n  toast.success(\n    'You found all easter eggs! \\n Get ready for a dance party🥳🎊🎉💃',\n    {autoClose: 9000}\n  );\n  const soundHTMLEl = document.getElementById('sound');\n  soundHTMLEl.src =\n    'https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/230707340&color=%23ff5500&auto_play=true&aallow_comments=false';\n  soundHTMLEl.height = '100px';\n  soundHTMLEl.width = '245px';\n};\n","import React, {useState, useContext} from 'react';\nimport {notifyEasterEgg3} from '../util/easterEggNotifications';\n\nexport const ToyCenter = () => {\n  // state vars\n  const [centerAnimated, setCenterAnimated] = useState(false);\n\n  return (\n    <>\n      <circle\n        className={centerAnimated ? 'animated-toy-center-ring' : ''}\n        cx={100.666}\n        cy={100.666}\n        r={33.333}\n      />\n      <circle\n        className={centerAnimated ? 'animated-toy-center' : ''}\n        onClick={() => {\n          notifyEasterEgg3();\n          setCenterAnimated(true);\n        }}\n        fill=\"#4C4C4D\"\n        cx={100.666}\n        cy={100.666}\n        r={28.07}\n      />\n    </>\n  );\n};\n","import React, {useEffect, useRef} from 'react';\nimport {ToyCenter} from './ToyCenter';\n\nexport const Toy = (props) => {\n  // ref vars\n  let forceStopAnimate = useRef(false);\n  let targetColorIdx = useRef(0); // Increments on each correct click. Resets on new level.\n\n  // props\n  let gameColors = props.gameColors.current;\n\n  // constants\n  const [YELLOW, BLUE, GREEN, RED] = ['Y', 'B', 'G', 'R'];\n\n  useEffect(() => {\n    animateToy();\n  });\n\n  const sleep = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const animateToy = async () => {\n    // disable clicking toy while animating\n    let rootHtmlTag = document.getElementsByTagName('html')[0];\n    rootHtmlTag.classList.add('u-disable-click-events');\n    rootHtmlTag.style.cursor = 'not-allowed';\n\n    await sleep(400);\n\n    var animateGameColors = async (i) => {\n      if (gameColors[i]) {\n        changeColor(gameColors[i]);\n        setTimeout(() => animateGameColors(i + 1), 800);\n      }\n\n      await sleep(500);\n\n      if (i === gameColors.length - 1) {\n        // enable clicking on last elemnent\n        rootHtmlTag.classList.remove('u-disable-click-events');\n        rootHtmlTag.style.cursor = null;\n      }\n\n      if (forceStopAnimate.current) return;\n      if (gameColors[i]) resetColor(gameColors[i]);\n    };\n\n    animateGameColors(0);\n  };\n\n  const changeColor = (color) => {\n    if (!document.getElementById(color)) return;\n\n    switch (color) {\n      case YELLOW:\n        document.getElementById(YELLOW).style.fill = 'lightyellow';\n        break;\n      case BLUE:\n        document.getElementById(BLUE).style.fill = 'lightblue';\n        break;\n      case GREEN:\n        document.getElementById(GREEN).style.fill = 'lightgreen';\n        break;\n      case RED:\n        document.getElementById(RED).style.fill = 'orange';\n        break;\n      default:\n        break;\n    }\n  };\n\n  const resetColor = (color) => {\n    document.getElementById(color).style.fill = null;\n  };\n\n  const handleColorClick = (e) => {\n    if (e.target.id === gameColors[targetColorIdx.current]) {\n      if (levelCompleted()) {\n        props.incrementLevel();\n        targetColorIdx.current = 0;\n      } else {\n        targetColorIdx.current++;\n      }\n    } else {\n      forceStopAnimate.current = true;\n      targetColorIdx.current = 0;\n      props.setGameOver(true);\n    }\n  };\n\n  const levelCompleted = () => {\n    return targetColorIdx.current === gameColors.length - 1;\n  };\n\n  return (\n    <svg id=\"toy\" width={201.333} height={201.332} {...props}>\n      <path\n        fill=\"#2B2B2B\"\n        d=\"M201.333 100.666c0 55.597-45.072 100.666-100.665 100.666C45.071 201.332 0 156.263 0 100.666S45.071 0 100.668 0c55.592 0 100.665 45.069 100.665 100.666z\"\n      />\n      <path d=\"M198.333 100.666c0 53.94-43.729 97.666-97.665 97.666C46.728 198.332 3 154.606 3 100.666S46.728 3 100.668 3c53.936 0 97.665 43.726 97.665 97.666z\" />\n      <defs>\n        <circle id=\"prefix__a\" cx={100.666} cy={100.666} r={91.333} />\n      </defs>\n      <clipPath id=\"prefix__b\">\n        <use xlinkHref=\"#prefix__a\" overflow=\"visible\" />\n      </clipPath>\n      <path\n        clipPath=\"url(#prefix__b)\"\n        fill=\"#FFDE17\"\n        d=\"M-2 100.666h102.665v97.666H-2z\"\n      />\n      <path\n        clipPath=\"url(#prefix__b)\"\n        fill=\"#21409A\"\n        d=\"M100.667 100.666h102.665v97.666H100.667z\"\n      />\n      <path\n        clipPath=\"url(#prefix__b)\"\n        fill=\"#00A14B\"\n        d=\"M100.667 3h102.665v97.666H100.667z\"\n      />\n      <path\n        clipPath=\"url(#prefix__b)\"\n        fill=\"#ED1C24\"\n        d=\"M-2 3h102.665v97.666H-2z\"\n      />\n      <g>\n        <defs>\n          <circle id=\"prefix__c\" cx={100.666} cy={100.666} r={86.667} />\n        </defs>\n        <clipPath id=\"prefix__d\">\n          <use xlinkHref=\"#prefix__c\" overflow=\"visible\" />\n        </clipPath>\n        <path\n          id=\"Y\"\n          className=\"toy-btn\"\n          onClick={(e) => handleColorClick(e)}\n          clipPath=\"url(#prefix__d)\"\n          fill=\"#DFC323\"\n          d=\"M3.246 100.666h97.419v92.676H3.246z\"\n        />\n        <path\n          id=\"B\"\n          className=\"toy-btn\"\n          onClick={(e) => handleColorClick(e)}\n          clipPath=\"url(#prefix__d)\"\n          fill=\"#283676\"\n          d=\"M100.667 100.666h97.419v92.676h-97.419z\"\n        />\n        <path\n          id=\"G\"\n          className=\"toy-btn\"\n          onClick={(e) => handleColorClick(e)}\n          clipPath=\"url(#prefix__d)\"\n          fill=\"#00783E\"\n          d=\"M100.667 7.99h97.419v92.676h-97.419z\"\n        />\n        <path\n          id=\"R\"\n          className=\"toy-btn\"\n          onClick={(e) => handleColorClick(e)}\n          clipPath=\"url(#prefix__d)\"\n          fill=\"#C92127\"\n          d=\"M3.246 7.99h97.419v92.676H3.246z\"\n        />\n      </g>\n      <path d=\"M97.167 6.041h7v189h-7z\" />\n      <path d=\"M6.167 97.166h189v7h-189z\" />\n      <ToyCenter />\n    </svg>\n  );\n};\n","import React, {useState} from 'react';\nimport ReactConfetti from 'react-confetti';\n\n// This is what each component should import\nexport const ConfettiContext = React.createContext();\n\nexport const ConfettiContextProvider = ({children}) => {\n  const [runConfetti, setRunConfetti] = useState(false);\n\n  return (\n    <ConfettiContext.Provider\n      value={{\n        setRunConfetti,\n      }}\n    >\n      <ReactConfetti run={runConfetti} />\n      {children}\n    </ConfettiContext.Provider>\n  );\n};\n","export function setCookie(cname, cvalue, exdays) {\n  var d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  var expires = 'expires=' + d.toUTCString();\n  document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\n}\n\nexport function getCookie(cname) {\n  var name = cname + '=';\n  var ca = document.cookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n}\n\n// source: https://www.w3schools.com/js/js_cookies.asp\n","import React, {useState, useRef, useContext} from 'react';\nimport {Scores} from './Scores';\nimport {Toy} from './Toy';\nimport {ConfettiContext} from './ConfettiContext';\nimport {\n  notifyEasterEgg1,\n  notifyEasterEgg2,\n  allEasterEggsFound,\n} from '../util/easterEggNotifications';\nimport {getCookie, setCookie} from '../util/cookies';\n\nexport const GameContainer = () => {\n  // variables\n  let highScoreCookie = getCookie('simonSaysHighScore');\n\n  // state vars\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [currLevel, setCurrLevel] = useState(0);\n  const [highScore, setHighScore] = useState(\n    highScoreCookie ? highScoreCookie : 0\n  );\n\n  // ref vars\n  let gameColors = useRef([]); // game's randomly generated colors\n  let reachedHighScore = useRef(false);\n\n  // constants\n  const COLORS_ARR = ['R', 'G', 'B', 'Y'];\n\n  // context\n  let confettiCtx = useContext(ConfettiContext);\n\n  const incrementLevel = () => {\n    // add random color to gameColors\n    gameColors.current.push(\n      COLORS_ARR[Math.floor(Math.random() * COLORS_ARR.length)]\n    );\n\n    gameOver ? setCurrLevel(1) : setCurrLevel(currLevel + 1);\n  };\n\n  const startGame = () => {\n    setGameStarted(true);\n    incrementLevel();\n  };\n\n  const restartGame = () => {\n    reachedHighScore.current = false;\n    gameColors.current = [];\n    incrementLevel();\n    setGameOver(false);\n  };\n\n  if (allEasterEggsFound()) confettiCtx.setRunConfetti(true);\n\n  if (!gameStarted) {\n    return (\n      <div className=\"game-screen\">\n        <div className=\"greetings-container\">\n          <h1>\n            Sim<span onClick={notifyEasterEgg1}>o</span>n Says\n          </h1>\n          <div className=\"start-button\" onClick={startGame}>\n            Start!\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (gameOver) {\n    if (currLevel > highScore) {\n      setHighScore(currLevel);\n      reachedHighScore.current = true;\n      setCookie('simonSaysHighScore', currLevel, 30);\n    }\n\n    return (\n      <div className=\"game-screen\">\n        <div className=\"greetings-container\">\n          <h1>\n            Sim<span onClick={notifyEasterEgg1}>o</span>n Says\n          </h1>\n          <div className=\"start-button u-orange-button\" onClick={restartGame}>\n            Restart!\n          </div>\n\n          {reachedHighScore.current ? (\n            <h1>New high score! ({highScore}) 🥳</h1>\n          ) : (\n            <>\n              <h4>Level reached: {currLevel}</h4>\n              <h4>High Score: {highScore}</h4>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"GameContainer\">\n      <Toy\n        gameColors={gameColors}\n        incrementLevel={incrementLevel}\n        setGameOver={setGameOver}\n      />\n      <Scores currLevel={currLevel} highScore={highScore} />\n      <div onClick={notifyEasterEgg2} className=\"egg-emoji\">\n        🥚\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {ToastContainer, Slide, toast} from 'react-toastify';\nimport {GameContainer} from './components/GameContainer';\nimport {ConfettiContextProvider} from './components/ConfettiContext';\nimport {getCookie} from './util/cookies';\n\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  if (!getCookie('simonSaysHighScore')) {\n    toast.info(\n      'This site uses a cookie to store the high score. By using website you agree for cookie use 🍪',\n      {\n        autoClose: false,\n      }\n    );\n  }\n\n  return (\n    <>\n      <iframe\n        title=\"soundCloud-placeholder-for-celeberation-music\"\n        id=\"sound\"\n        width=\"0\"\n        height=\"0\"\n        scrolling=\"no\"\n        frameborder=\"no\"\n        allow=\"autoplay\"\n        src=\"\"\n      ></iframe>\n      <ToastContainer position=\"top-center\" transition={Slide} />\n      <ConfettiContextProvider>\n        <GameContainer />\n      </ConfettiContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}